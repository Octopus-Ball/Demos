# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import test_pb2 as test__pb2


class TestStub(object):
  """定义服务
  在服务中定义接口(指定请求和响应应类型)
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UnaryRPCs = channel.unary_unary(
        '/Test/UnaryRPCs',
        request_serializer=test__pb2.MyRequest.SerializeToString,
        response_deserializer=test__pb2.MyReply.FromString,
        )
    self.ServerStreamingRPCs = channel.unary_stream(
        '/Test/ServerStreamingRPCs',
        request_serializer=test__pb2.MyRequest.SerializeToString,
        response_deserializer=test__pb2.MyReply.FromString,
        )
    self.ClientStreamingRPCs = channel.stream_unary(
        '/Test/ClientStreamingRPCs',
        request_serializer=test__pb2.MyRequest.SerializeToString,
        response_deserializer=test__pb2.MyReply.FromString,
        )
    self.BidirectionalStreamingRPCs = channel.stream_stream(
        '/Test/BidirectionalStreamingRPCs',
        request_serializer=test__pb2.MyRequest.SerializeToString,
        response_deserializer=test__pb2.MyReply.FromString,
        )


class TestServicer(object):
  """定义服务
  在服务中定义接口(指定请求和响应应类型)
  """

  def UnaryRPCs(self, request, context):
    """一元RPC示例
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ServerStreamingRPCs(self, request, context):
    """服务端流式RPC示例
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClientStreamingRPCs(self, request_iterator, context):
    """客户端流式RPC示例
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BidirectionalStreamingRPCs(self, request_iterator, context):
    """双向流式RPC示例
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UnaryRPCs': grpc.unary_unary_rpc_method_handler(
          servicer.UnaryRPCs,
          request_deserializer=test__pb2.MyRequest.FromString,
          response_serializer=test__pb2.MyReply.SerializeToString,
      ),
      'ServerStreamingRPCs': grpc.unary_stream_rpc_method_handler(
          servicer.ServerStreamingRPCs,
          request_deserializer=test__pb2.MyRequest.FromString,
          response_serializer=test__pb2.MyReply.SerializeToString,
      ),
      'ClientStreamingRPCs': grpc.stream_unary_rpc_method_handler(
          servicer.ClientStreamingRPCs,
          request_deserializer=test__pb2.MyRequest.FromString,
          response_serializer=test__pb2.MyReply.SerializeToString,
      ),
      'BidirectionalStreamingRPCs': grpc.stream_stream_rpc_method_handler(
          servicer.BidirectionalStreamingRPCs,
          request_deserializer=test__pb2.MyRequest.FromString,
          response_serializer=test__pb2.MyReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Test', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
