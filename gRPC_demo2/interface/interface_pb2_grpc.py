# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import types_pb2 as types__pb2


class MyServerStub(object):
  """定义服务接口
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.send_msg = channel.unary_unary(
        '/MyServer/send_msg',
        request_serializer=types__pb2.msg1.SerializeToString,
        response_deserializer=types__pb2.msg1.FromString,
        )


class MyServerServicer(object):
  """定义服务接口
  """

  def send_msg(self, request, context):
    """接口名
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MyServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'send_msg': grpc.unary_unary_rpc_method_handler(
          servicer.send_msg,
          request_deserializer=types__pb2.msg1.FromString,
          response_serializer=types__pb2.msg1.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'MyServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
